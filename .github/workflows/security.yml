name: 🛡️ Security Scanning (Simplified)
# Simplified security scanning that handles failures gracefully

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    # Run security scans daily at 2 AM UTC  
    - cron: '0 2 * * *'
  workflow_dispatch:

jobs:
  basic-security:
    name: 🛡️ Basic Security Checks
    runs-on: ubuntu-latest
    timeout-minutes: 15
    
    steps:
      - name: 📂 Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: 🐍 Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'
          
      - name: 📦 Install basic security tools
        run: |
          pip install --upgrade pip
          # Install tools with error handling
          pip install bandit safety || echo "Some security tools failed to install"
          
      - name: 🛡️ Basic code security scan (Bandit)
        run: |
          echo "## 🛡️ Security Scan Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          # Check if Python files exist
          python_files=$(find . -name "*.py" -not -path "./venv/*" -not -path "./.git/*" | head -5)
          
          if [ -z "$python_files" ]; then
            echo "ℹ️ **No Python files found** - skipping Bandit scan" >> $GITHUB_STEP_SUMMARY
          else
            echo "### 🐍 Python Security Scan (Bandit)" >> $GITHUB_STEP_SUMMARY
            
            if bandit -r . -f json -o bandit-report.json 2>/dev/null; then
              echo "✅ **Bandit scan:** No critical issues found" >> $GITHUB_STEP_SUMMARY
            else
              echo "⚠️ **Bandit scan:** Some issues found (not blocking)" >> $GITHUB_STEP_SUMMARY
              
              if [ -f bandit-report.json ]; then
                # Count issues but don't fail
                high_issues=$(jq '.metrics._totals."SEVERITY.HIGH" // 0' bandit-report.json 2>/dev/null || echo "0")
                medium_issues=$(jq '.metrics._totals."SEVERITY.MEDIUM" // 0' bandit-report.json 2>/dev/null || echo "0")
                low_issues=$(jq '.metrics._totals."SEVERITY.LOW" // 0' bandit-report.json 2>/dev/null || echo "0")
                
                echo "   - High: $high_issues, Medium: $medium_issues, Low: $low_issues" >> $GITHUB_STEP_SUMMARY
              fi
            fi
          fi
          
      - name: 📦 Basic dependency check (Safety)
        run: |
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 📦 Dependency Security Check (Safety)" >> $GITHUB_STEP_SUMMARY
          
          # Check if requirements files exist
          if [ -f requirements.txt ] || [ -f requirements-test.txt ]; then
            if safety check 2>/dev/null; then
              echo "✅ **Safety check:** No known vulnerabilities" >> $GITHUB_STEP_SUMMARY
            else
              echo "⚠️ **Safety check:** Some vulnerabilities found (review recommended)" >> $GITHUB_STEP_SUMMARY
            fi
          else
            echo "ℹ️ **No requirements files found** - skipping dependency check" >> $GITHUB_STEP_SUMMARY
          fi
          
      - name: 🔐 Basic secrets check
        run: |
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 🔐 Basic Secrets Check" >> $GITHUB_STEP_SUMMARY
          
          # Simple pattern matching for common secrets (non-blocking)
          secret_patterns_found=0
          
          # Check for common secret patterns
          if grep -r "lin_api_" . --exclude-dir=.git 2>/dev/null | grep -v "example\|placeholder\|PLACEHOLDER" >/dev/null; then
            echo "⚠️ Found potential Linear API key pattern" >> $GITHUB_STEP_SUMMARY
            secret_patterns_found=$((secret_patterns_found + 1))
          fi
          
          if grep -r "gh[ps]_" . --exclude-dir=.git 2>/dev/null | grep -v "example\|placeholder\|PLACEHOLDER" >/dev/null; then
            echo "⚠️ Found potential GitHub token pattern" >> $GITHUB_STEP_SUMMARY
            secret_patterns_found=$((secret_patterns_found + 1))
          fi
          
          if [ $secret_patterns_found -eq 0 ]; then
            echo "✅ **Secrets check:** No obvious secret patterns found" >> $GITHUB_STEP_SUMMARY
          else
            echo "⚠️ **Secrets check:** $secret_patterns_found potential patterns found (review recommended)" >> $GITHUB_STEP_SUMMARY
            echo "   Note: Patterns may be examples or placeholders" >> $GITHUB_STEP_SUMMARY
          fi
          
      - name: 🔍 Shell script security check
        run: |
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 🐚 Shell Script Security" >> $GITHUB_STEP_SUMMARY
          
          shell_scripts=$(find . -name "*.sh" -not -path "./.git/*" | head -10)
          
          if [ -z "$shell_scripts" ]; then
            echo "ℹ️ **No shell scripts found**" >> $GITHUB_STEP_SUMMARY
          else
            # Install shellcheck if available
            if sudo apt-get update && sudo apt-get install -y shellcheck 2>/dev/null; then
              echo "🔧 **ShellCheck analysis:**" >> $GITHUB_STEP_SUMMARY
              
              error_count=0
              for script in $shell_scripts; do
                if shellcheck -S error "$script" 2>/dev/null; then
                  echo "   ✅ \`$script\`: No critical errors" >> $GITHUB_STEP_SUMMARY
                else
                  echo "   ⚠️ \`$script\`: Some issues found" >> $GITHUB_STEP_SUMMARY
                  error_count=$((error_count + 1))
                fi
              done
              
              if [ $error_count -eq 0 ]; then
                echo "✅ **Overall:** No critical shell script errors" >> $GITHUB_STEP_SUMMARY
              else
                echo "⚠️ **Overall:** $error_count scripts with issues (review recommended)" >> $GITHUB_STEP_SUMMARY
              fi
            else
              echo "⚠️ **ShellCheck not available** - skipping shell script analysis" >> $GITHUB_STEP_SUMMARY
            fi
          fi

  compliance-check:
    name: 📋 Basic Compliance Check
    runs-on: ubuntu-latest
    timeout-minutes: 5
    
    steps:
      - name: 📂 Checkout repository
        uses: actions/checkout@v4
        
      - name: 📋 Check security files
        run: |
          echo "## 📋 Compliance Check Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          # Check for security-related files
          security_files_found=0
          
          if [ -f "SECURITY.md" ] || [ -f ".github/SECURITY.md" ]; then
            echo "✅ **SECURITY.md:** Found" >> $GITHUB_STEP_SUMMARY
            security_files_found=$((security_files_found + 1))
          else
            echo "⚠️ **SECURITY.md:** Missing (recommended)" >> $GITHUB_STEP_SUMMARY
          fi
          
          if [ -f "CODE_OF_CONDUCT.md" ] || [ -f ".github/CODE_OF_CONDUCT.md" ]; then
            echo "✅ **CODE_OF_CONDUCT.md:** Found" >> $GITHUB_STEP_SUMMARY
            security_files_found=$((security_files_found + 1))
          else
            echo "⚠️ **CODE_OF_CONDUCT.md:** Missing (recommended)" >> $GITHUB_STEP_SUMMARY
          fi
          
          if [ -f "CONTRIBUTING.md" ] || [ -f ".github/CONTRIBUTING.md" ]; then
            echo "✅ **CONTRIBUTING.md:** Found" >> $GITHUB_STEP_SUMMARY
            security_files_found=$((security_files_found + 1))
          else
            echo "ℹ️ **CONTRIBUTING.md:** Missing (optional)" >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Summary:** $security_files_found/2 required security files found" >> $GITHUB_STEP_SUMMARY
          
      - name: 🔒 Basic workflow security check
        run: |
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 🔒 Workflow Security" >> $GITHUB_STEP_SUMMARY
          
          workflow_files=$(find .github/workflows/ -name "*.yml" -o -name "*.yaml" 2>/dev/null || echo "")
          
          if [ -z "$workflow_files" ]; then
            echo "ℹ️ **No workflow files found**" >> $GITHUB_STEP_SUMMARY
          else
            workflow_count=$(echo "$workflow_files" | wc -l)
            echo "📊 **Found $workflow_count workflow files**" >> $GITHUB_STEP_SUMMARY
            
            # Basic checks for workflow security
            secrets_usage=0
            
            for workflow in $workflow_files; do
              if grep -q "secrets\." "$workflow" 2>/dev/null; then
                secrets_usage=$((secrets_usage + 1))
              fi
            done
            
            if [ $secrets_usage -gt 0 ]; then
              echo "🔐 **Secrets usage:** $secrets_usage workflows use secrets (normal)" >> $GITHUB_STEP_SUMMARY
            else
              echo "ℹ️ **Secrets usage:** No workflows use secrets" >> $GITHUB_STEP_SUMMARY
            fi
          fi

  summary:
    name: 📊 Security Summary
    runs-on: ubuntu-latest
    needs: [basic-security, compliance-check]
    if: always()
    
    steps:
      - name: 📊 Generate security summary
        run: |
          echo "# 🛡️ Security Scan Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          echo "## 📋 Scan Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Check | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|-------|--------|" >> $GITHUB_STEP_SUMMARY
          echo "| Basic Security Scan | ${{ needs.basic-security.result == 'success' && '✅ Completed' || '⚠️ Issues Found' }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Compliance Check | ${{ needs.compliance-check.result == 'success' && '✅ Completed' || '⚠️ Issues Found' }} |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          # Overall status
          if [[ "${{ needs.basic-security.result }}" == "success" && "${{ needs.compliance-check.result }}" == "success" ]]; then
            echo "## ✅ Overall Status: PASSED" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "Security scans completed successfully. Review individual job logs for detailed results." >> $GITHUB_STEP_SUMMARY
          else
            echo "## ⚠️ Overall Status: COMPLETED WITH WARNINGS" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "Security scans completed but found issues that should be reviewed." >> $GITHUB_STEP_SUMMARY
            echo "Note: This is informational and doesn't fail the build." >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## 🔧 Recommendations" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- Review any warnings found in the security scans" >> $GITHUB_STEP_SUMMARY
          echo "- Ensure sensitive data is stored in GitHub Secrets" >> $GITHUB_STEP_SUMMARY
          echo "- Keep dependencies updated regularly" >> $GITHUB_STEP_SUMMARY
          echo "- Add missing security documentation files" >> $GITHUB_STEP_SUMMARY
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Scan completed:** \`$(date -u)\`" >> $GITHUB_STEP_SUMMARY
          
      - name: 🎯 Final security decision
        run: |
          # Don't fail the build for security warnings - just report
          echo "✅ Security scan completed (warnings are informational)"
          echo "Note: Security issues found above should be reviewed but don't block the build"
          exit 0
